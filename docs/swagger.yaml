definitions:
  errcode.ErrorInfo:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_authorization.result:
    properties:
      items:
        type: object
      total:
        type: integer
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_cluster.clusterInfo:
    properties:
      clusterDescription:
        type: string
      clusterName:
        type: string
      createTime:
        type: string
      harborAddr:
        type: string
      isMemberCluster:
        type: boolean
      kubeApiServer:
        type: string
      namespaceCount:
        type: integer
      networkType:
        type: string
      nodeCount:
        type: integer
      status:
        type: string
      totalCpu:
        type: integer
      totalGpu:
        type: integer
      totalMem:
        type: integer
      totalStorage:
        type: integer
      totalStorageEphemeral:
        type: integer
      usedCpu:
        type: integer
      usedGpu:
        type: integer
      usedMem:
        type: integer
      usedStorage:
        type: integer
      usedStorageEphemeral:
        type: integer
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_cluster.result:
    properties:
      items:
        items:
          $ref: '#/definitions/github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_cluster.clusterInfo'
        type: array
      total:
        type: integer
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_cluster.scriptData:
    properties:
      clusterName:
        type: string
      description:
        type: string
      k8sEndpoint:
        type: string
      kubeConfig:
        type: string
      kubeCubeHost:
        type: string
      networkType:
        type: string
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.LoginInfo:
    properties:
      loginType:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.NameValid:
    properties:
      isValid:
        type: boolean
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.ResetPwd:
    properties:
      newPassword:
        type: string
      originPassword:
        type: string
      userName:
        type: string
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.UserItem:
    properties:
      name:
        type: string
      spec:
        $ref: '#/definitions/v1.UserSpec'
      status:
        $ref: '#/definitions/v1.UserStatus'
    type: object
  github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.UserList:
    properties:
      items:
        items:
          $ref: '#/definitions/github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.UserItem'
        type: array
      total:
        type: integer
    type: object
  pkg_apiserver_cubeapi_authorization.result:
    properties:
      items:
        type: object
      total:
        type: integer
    type: object
  pkg_apiserver_cubeapi_cluster.clusterInfo:
    properties:
      clusterDescription:
        type: string
      clusterName:
        type: string
      createTime:
        type: string
      harborAddr:
        type: string
      isMemberCluster:
        type: boolean
      kubeApiServer:
        type: string
      namespaceCount:
        type: integer
      networkType:
        type: string
      nodeCount:
        type: integer
      status:
        type: string
      totalCpu:
        type: integer
      totalGpu:
        type: integer
      totalMem:
        type: integer
      totalStorage:
        type: integer
      totalStorageEphemeral:
        type: integer
      usedCpu:
        type: integer
      usedGpu:
        type: integer
      usedMem:
        type: integer
      usedStorage:
        type: integer
      usedStorageEphemeral:
        type: integer
    type: object
  pkg_apiserver_cubeapi_cluster.result:
    properties:
      items:
        items:
          $ref: '#/definitions/pkg_apiserver_cubeapi_cluster.clusterInfo'
        type: array
      total:
        type: integer
    type: object
  pkg_apiserver_cubeapi_cluster.scriptData:
    properties:
      clusterName:
        type: string
      description:
        type: string
      k8sEndpoint:
        type: string
      kubeConfig:
        type: string
      kubeCubeHost:
        type: string
      networkType:
        type: string
    type: object
  pkg_apiserver_cubeapi_user.LoginInfo:
    properties:
      loginType:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  pkg_apiserver_cubeapi_user.NameValid:
    properties:
      isValid:
        type: boolean
    type: object
  pkg_apiserver_cubeapi_user.ResetPwd:
    properties:
      newPassword:
        type: string
      originPassword:
        type: string
      userName:
        type: string
    type: object
  pkg_apiserver_cubeapi_user.UserItem:
    properties:
      name:
        type: string
      spec:
        $ref: '#/definitions/v1.UserSpec'
      status:
        $ref: '#/definitions/v1.UserStatus'
    type: object
  pkg_apiserver_cubeapi_user.UserList:
    properties:
      items:
        items:
          $ref: '#/definitions/pkg_apiserver_cubeapi_user.UserItem'
        type: array
      total:
        type: integer
    type: object
  response.SuccessInfo:
    properties:
      message:
        type: string
    type: object
  v1.FieldsV1:
    type: object
  v1.Key:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      metadata:
        type: object
        properties:
          annotations:
            additionalProperties:
              type: string
            description: |-
              Annotations is an unstructured key value map stored with a resource that may be
              set by external tools to store and retrieve arbitrary metadata. They are not
              queryable and should be preserved when modifying objects.
              More info: http://kubernetes.io/docs/user-guide/annotations
              +optional
            type: object
          clusterName:
            description: |-
              The name of the cluster which the object belongs to.
              This is used to distinguish resources with same name and namespace in different clusters.
              This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
              +optional
            type: string
          creationTimestamp:
            description: |-
              CreationTimestamp is a timestamp representing the server time when this object was
              created. It is not guaranteed to be set in happens-before order across separate operations.
              Clients may not set this value. It is represented in RFC3339 form and is in UTC.

              Populated by the system.
              Read-only.
              Null for lists.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          deletionGracePeriodSeconds:
            description: |-
              Number of seconds allowed for this object to gracefully terminate before
              it will be removed from the system. Only set when deletionTimestamp is also set.
              May only be shortened.
              Read-only.
              +optional
            type: integer
          deletionTimestamp:
            description: |-
              DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
              field is set by the server when a graceful deletion is requested by the user, and is not
              directly settable by a client. The resource is expected to be deleted (no longer visible
              from resource lists, and not reachable by name) after the time in this field, once the
              finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
              Once the deletionTimestamp is set, this value may not be unset or be set further into the
              future, although it may be shortened or the resource may be deleted prior to this time.
              For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
              by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
              the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
              remove the pod from the API. In the presence of network partitions, this object may still
              exist after this timestamp, until an administrator or automated process can determine the
              resource is fully terminated.
              If not set, graceful deletion of the object has not been requested.

              Populated by the system when a graceful deletion is requested.
              Read-only.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          finalizers:
            description: |-
              Must be empty before the object is deleted from the registry. Each entry
              is an identifier for the responsible component that will remove the entry
              from the list. If the deletionTimestamp of the object is non-nil, entries
              in this list can only be removed.
              Finalizers may be processed and removed in any order.  Order is NOT enforced
              because it introduces significant risk of stuck finalizers.
              finalizers is a shared field, any actor with permission can reorder it.
              If the finalizer list is processed in order, then this can lead to a situation
              in which the component responsible for the first finalizer in the list is
              waiting for a signal (field value, external system, or other) produced by a
              component responsible for a finalizer later in the list, resulting in a deadlock.
              Without enforced ordering finalizers are free to order amongst themselves and
              are not vulnerable to ordering changes in the list.
              +optional
              +patchStrategy=merge
            items:
              type: string
            type: array
          generateName:
            description: |-
              GenerateName is an optional prefix, used by the server, to generate a unique
              name ONLY IF the Name field has not been provided.
              If this field is used, the name returned to the client will be different
              than the name passed. This value will also be combined with a unique suffix.
              The provided value has the same validation rules as the Name field,
              and may be truncated by the length of the suffix required to make the value
              unique on the server.

              If this field is specified and the generated name exists, the server will
              NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
              ServerTimeout indicating a unique name could not be found in the time allotted, and the client
              should retry (optionally after the time indicated in the Retry-After header).

              Applied only if Name is not specified.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
              +optional
            type: string
          generation:
            description: |-
              A sequence number representing a specific generation of the desired state.
              Populated by the system. Read-only.
              +optional
            type: integer
          labels:
            additionalProperties:
              type: string
            description: |-
              Map of string keys and values that can be used to organize and categorize
              (scope and select) objects. May match selectors of replication controllers
              and services.
              More info: http://kubernetes.io/docs/user-guide/labels
              +optional
            type: object
          managedFields:
            description: |-
              ManagedFields maps workflow-id and version to the set of fields
              that are managed by that workflow. This is mostly for internal
              housekeeping, and users typically shouldn't need to set or
              understand this field. A workflow can be the user's name, a
              controller's name, or the name of a specific apply path like
              "ci-cd". The set of fields is always in the version that the
              workflow used when modifying the object.

              +optional
            items:
              $ref: '#/definitions/'
            type: array
          name:
            description: |-
              Name must be unique within a namespace. Is required when creating resources, although
              some resources may allow a client to request the generation of an appropriate name
              automatically. Name is primarily intended for creation idempotence and configuration
              definition.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/identifiers#names
              +optional
            type: string
          namespace:
            description: |-
              Namespace defines the space within which each name must be unique. An empty namespace is
              equivalent to the "default" namespace, but "default" is the canonical representation.
              Not all objects are required to be scoped to a namespace - the value of this field for
              those objects will be empty.

              Must be a DNS_LABEL.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/namespaces
              +optional
            type: string
          ownerReferences:
            description: |-
              List of objects depended by this object. If ALL objects in the list have
              been deleted, this object will be garbage collected. If this object is managed by a controller,
              then an entry in this list will point to this controller, with the controller field set to true.
              There cannot be more than one managing controller.
              +optional
              +patchMergeKey=uid
              +patchStrategy=merge
            items:
              $ref: '#/definitions/v1.OwnerReference'
            type: array
          resourceVersion:
            description: |-
              An opaque value that represents the internal version of this object that can
              be used by clients to determine when objects have changed. May be used for optimistic
              concurrency, change detection, and the watch operation on a resource or set of resources.
              Clients must treat these values as opaque and passed unmodified back to the server.
              They may only be valid for a particular resource or set of resources.

              Populated by the system.
              Read-only.
              Value must be treated as opaque by clients and .
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              +optional
            type: string
          selfLink:
            description: |-
              SelfLink is a URL representing this object.
              Populated by the system.
              Read-only.

              DEPRECATED
              Kubernetes will stop propagating this field in 1.20 release and the field is planned
              to be removed in 1.21 release.
              +optional
            type: string
          uid:
            description: |-
              UID is the unique in time and space value for this object. It is typically generated by
              the server on successful creation of a resource and is not allowed to change on PUT
              operations.

              Populated by the system.
              Read-only.
              More info: http://kubernetes.io/docs/user-guide/identifiers#uids
              +optional
            type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.KeySpec'
      status:
        $ref: '#/definitions/v1.KeyStatus'
    type: object
  v1.KeyList:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      metadata:
        type: object
        properties:
          continue:
            description: |-
              continue may be set if the user set a limit on the number of items returned, and indicates that
              the server has more data available. The value is opaque and may be used to issue another request
              to the endpoint that served this list to retrieve the next set of available objects. Continuing a
              consistent list may not be possible if the server configuration has changed or more than a few
              minutes have passed. The resourceVersion field returned when using this continue value will be
              identical to the value in the first response, unless you have received this token from an error
              message.
            type: string
          remainingItemCount:
            description: |-
              remainingItemCount is the number of subsequent items in the list which are not included in this
              list response. If the list request contained label or field selectors, then the number of
              remaining items is unknown and the field will be left unset and omitted during serialization.
              If the list is complete (either because it is not chunking or because this is the last chunk),
              then there are no more remaining items and this field will be left unset and omitted during
              serialization.
              Servers older than v1.15 do not set this field.
              The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
              should not rely on the remainingItemCount to be set or to be exact.
              +optional
            type: integer
          resourceVersion:
            description: |-
              String that identifies the server's internal version of this object that
              can be used by clients to determine when objects have changed.
              Value must be treated as opaque by clients and passed unmodified back to the server.
              Populated by the system.
              Read-only.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              +optional
            type: string
          selfLink:
            description: |-
              selfLink is a URL representing this object.
              Populated by the system.
              Read-only.

              DEPRECATED
              Kubernetes will stop propagating this field in 1.20 release and the field is planned
              to be removed in 1.21 release.
              +optional
              type: string
      items:
        items:
          $ref: '#/definitions/v1.Key'
        type: array
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
    type: object
  v1.KeySpec:
    properties:
      secretKey:
        type: string
      user:
        type: string
    type: object
  v1.KeyStatus:
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
        type: string
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.RoleBinding:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      roleRef:
        $ref: '#/definitions/v1.RoleRef'
        description: |-
          RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.
          If the RoleRef cannot be resolved, the Authorizer must return an error.
      subjects:
        description: |-
          Subjects holds references to the objects the role applies to.
          +optional
        items:
          $ref: '#/definitions/v1.Subject'
        type: array
      metadata:
        type: object
        properties:
          annotations:
            additionalProperties:
              type: string
            description: |-
              Annotations is an unstructured key value map stored with a resource that may be
              set by external tools to store and retrieve arbitrary metadata. They are not
              queryable and should be preserved when modifying objects.
              More info: http://kubernetes.io/docs/user-guide/annotations
              +optional
            type: object
          clusterName:
            description: |-
              The name of the cluster which the object belongs to.
              This is used to distinguish resources with same name and namespace in different clusters.
              This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
              +optional
            type: string
          creationTimestamp:
            description: |-
              CreationTimestamp is a timestamp representing the server time when this object was
              created. It is not guaranteed to be set in happens-before order across separate operations.
              Clients may not set this value. It is represented in RFC3339 form and is in UTC.

              Populated by the system.
              Read-only.
              Null for lists.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          deletionGracePeriodSeconds:
            description: |-
              Number of seconds allowed for this object to gracefully terminate before
              it will be removed from the system. Only set when deletionTimestamp is also set.
              May only be shortened.
              Read-only.
              +optional
            type: integer
          deletionTimestamp:
            description: |-
              DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
              field is set by the server when a graceful deletion is requested by the user, and is not
              directly settable by a client. The resource is expected to be deleted (no longer visible
              from resource lists, and not reachable by name) after the time in this field, once the
              finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
              Once the deletionTimestamp is set, this value may not be unset or be set further into the
              future, although it may be shortened or the resource may be deleted prior to this time.
              For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
              by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
              the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
              remove the pod from the API. In the presence of network partitions, this object may still
              exist after this timestamp, until an administrator or automated process can determine the
              resource is fully terminated.
              If not set, graceful deletion of the object has not been requested.

              Populated by the system when a graceful deletion is requested.
              Read-only.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          finalizers:
            description: |-
              Must be empty before the object is deleted from the registry. Each entry
              is an identifier for the responsible component that will remove the entry
              from the list. If the deletionTimestamp of the object is non-nil, entries
              in this list can only be removed.
              Finalizers may be processed and removed in any order.  Order is NOT enforced
              because it introduces significant risk of stuck finalizers.
              finalizers is a shared field, any actor with permission can reorder it.
              If the finalizer list is processed in order, then this can lead to a situation
              in which the component responsible for the first finalizer in the list is
              waiting for a signal (field value, external system, or other) produced by a
              component responsible for a finalizer later in the list, resulting in a deadlock.
              Without enforced ordering finalizers are free to order amongst themselves and
              are not vulnerable to ordering changes in the list.
              +optional
              +patchStrategy=merge
            items:
              type: string
            type: array
          generateName:
            description: |-
              GenerateName is an optional prefix, used by the server, to generate a unique
              name ONLY IF the Name field has not been provided.
              If this field is used, the name returned to the client will be different
              than the name passed. This value will also be combined with a unique suffix.
              The provided value has the same validation rules as the Name field,
              and may be truncated by the length of the suffix required to make the value
              unique on the server.

              If this field is specified and the generated name exists, the server will
              NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
              ServerTimeout indicating a unique name could not be found in the time allotted, and the client
              should retry (optionally after the time indicated in the Retry-After header).

              Applied only if Name is not specified.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
              +optional
            type: string
          generation:
            description: |-
              A sequence number representing a specific generation of the desired state.
              Populated by the system. Read-only.
              +optional
            type: integer
          labels:
            additionalProperties:
              type: string
            description: |-
              Map of string keys and values that can be used to organize and categorize
              (scope and select) objects. May match selectors of replication controllers
              and services.
              More info: http://kubernetes.io/docs/user-guide/labels
              +optional
            type: object
          managedFields:
            description: |-
              ManagedFields maps workflow-id and version to the set of fields
              that are managed by that workflow. This is mostly for internal
              housekeeping, and users typically shouldn't need to set or
              understand this field. A workflow can be the user's name, a
              controller's name, or the name of a specific apply path like
              "ci-cd". The set of fields is always in the version that the
              workflow used when modifying the object.

              +optional
            items:
              $ref: '#/definitions/v1.ManagedFieldsEntry'
            type: array
          name:
            description: |-
              Name must be unique within a namespace. Is required when creating resources, although
              some resources may allow a client to request the generation of an appropriate name
              automatically. Name is primarily intended for creation idempotence and configuration
              definition.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/identifiers#names
              +optional
            type: string
          namespace:
            description: |-
              Namespace defines the space within which each name must be unique. An empty namespace is
              equivalent to the "default" namespace, but "default" is the canonical representation.
              Not all objects are required to be scoped to a namespace - the value of this field for
              those objects will be empty.

              Must be a DNS_LABEL.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/namespaces
              +optional
            type: string
          ownerReferences:
            description: |-
              List of objects depended by this object. If ALL objects in the list have
              been deleted, this object will be garbage collected. If this object is managed by a controller,
              then an entry in this list will point to this controller, with the controller field set to true.
              There cannot be more than one managing controller.
              +optional
              +patchMergeKey=uid
              +patchStrategy=merge
            items:
              $ref: '#/definitions/v1.OwnerReference'
            type: array
          resourceVersion:
            description: |-
              An opaque value that represents the internal version of this object that can
              be used by clients to determine when objects have changed. May be used for optimistic
              concurrency, change detection, and the watch operation on a resource or set of resources.
              Clients must treat these values as opaque and passed unmodified back to the server.
              They may only be valid for a particular resource or set of resources.

              Populated by the system.
              Read-only.
              Value must be treated as opaque by clients and .
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              +optional
            type: string
          selfLink:
            description: |-
              SelfLink is a URL representing this object.
              Populated by the system.
              Read-only.

              DEPRECATED
              Kubernetes will stop propagating this field in 1.20 release and the field is planned
              to be removed in 1.21 release.
              +optional
            type: string
          uid:
            description: |-
              UID is the unique in time and space value for this object. It is typically generated by
              the server on successful creation of a resource and is not allowed to change on PUT
              operations.

              Populated by the system.
              Read-only.
              More info: http://kubernetes.io/docs/user-guide/identifiers#uids
              +optional
            type: string
    type: object
  v1.RoleRef:
    properties:
      apiGroup:
        description: APIGroup is the group for the resource being referenced
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.Subject:
    properties:
      apiGroup:
        description: |-
          APIGroup holds the API group of the referenced subject.
          Defaults to "" for ServiceAccount subjects.
          Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
          +optional
        type: string
      kind:
        description: |-
          Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
          If the Authorizer does not recognized the kind value, the Authorizer should report an error.
        type: string
      name:
        description: Name of the object being referenced.
        type: string
      namespace:
        description: |-
          Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
          the Authorizer should report an error.
          +optional
        type: string
    type: object
  v1.User:
    properties:
      metadata:
        properties:
          annotations:
            additionalProperties:
              type: string
            description: |-
              Annotations is an unstructured key value map stored with a resource that may be
              set by external tools to store and retrieve arbitrary metadata. They are not
              queryable and should be preserved when modifying objects.
              More info: http://kubernetes.io/docs/user-guide/annotations
              +optional
            type: object
          clusterName:
            description: |-
              The name of the cluster which the object belongs to.
              This is used to distinguish resources with same name and namespace in different clusters.
              This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
              +optional
            type: string
          creationTimestamp:
            description: |-
              CreationTimestamp is a timestamp representing the server time when this object was
              created. It is not guaranteed to be set in happens-before order across separate operations.
              Clients may not set this value. It is represented in RFC3339 form and is in UTC.

              Populated by the system.
              Read-only.
              Null for lists.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          deletionGracePeriodSeconds:
            description: |-
              Number of seconds allowed for this object to gracefully terminate before
              it will be removed from the system. Only set when deletionTimestamp is also set.
              May only be shortened.
              Read-only.
              +optional
            type: integer
          deletionTimestamp:
            description: |-
              DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
              field is set by the server when a graceful deletion is requested by the user, and is not
              directly settable by a client. The resource is expected to be deleted (no longer visible
              from resource lists, and not reachable by name) after the time in this field, once the
              finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
              Once the deletionTimestamp is set, this value may not be unset or be set further into the
              future, although it may be shortened or the resource may be deleted prior to this time.
              For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
              by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
              the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
              remove the pod from the API. In the presence of network partitions, this object may still
              exist after this timestamp, until an administrator or automated process can determine the
              resource is fully terminated.
              If not set, graceful deletion of the object has not been requested.

              Populated by the system when a graceful deletion is requested.
              Read-only.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
              +optional
            type: string
          finalizers:
            description: |-
              Must be empty before the object is deleted from the registry. Each entry
              is an identifier for the responsible component that will remove the entry
              from the list. If the deletionTimestamp of the object is non-nil, entries
              in this list can only be removed.
              Finalizers may be processed and removed in any order.  Order is NOT enforced
              because it introduces significant risk of stuck finalizers.
              finalizers is a shared field, any actor with permission can reorder it.
              If the finalizer list is processed in order, then this can lead to a situation
              in which the component responsible for the first finalizer in the list is
              waiting for a signal (field value, external system, or other) produced by a
              component responsible for a finalizer later in the list, resulting in a deadlock.
              Without enforced ordering finalizers are free to order amongst themselves and
              are not vulnerable to ordering changes in the list.
              +optional
              +patchStrategy=merge
            items:
              type: string
            type: array
          generateName:
            description: |-
              GenerateName is an optional prefix, used by the server, to generate a unique
              name ONLY IF the Name field has not been provided.
              If this field is used, the name returned to the client will be different
              than the name passed. This value will also be combined with a unique suffix.
              The provided value has the same validation rules as the Name field,
              and may be truncated by the length of the suffix required to make the value
              unique on the server.

              If this field is specified and the generated name exists, the server will
              NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
              ServerTimeout indicating a unique name could not be found in the time allotted, and the client
              should retry (optionally after the time indicated in the Retry-After header).

              Applied only if Name is not specified.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
              +optional
            type: string
          generation:
            description: |-
              A sequence number representing a specific generation of the desired state.
              Populated by the system. Read-only.
              +optional
            type: integer
          labels:
            additionalProperties:
              type: string
            description: |-
              Map of string keys and values that can be used to organize and categorize
              (scope and select) objects. May match selectors of replication controllers
              and services.
              More info: http://kubernetes.io/docs/user-guide/labels
              +optional
            type: object
          managedFields:
            description: |-
              ManagedFields maps workflow-id and version to the set of fields
              that are managed by that workflow. This is mostly for internal
              housekeeping, and users typically shouldn't need to set or
              understand this field. A workflow can be the user's name, a
              controller's name, or the name of a specific apply path like
              "ci-cd". The set of fields is always in the version that the
              workflow used when modifying the object.

              +optional
            items:
              $ref: '#/definitions/v1.ManagedFieldsEntry'
            type: array
          name:
            description: |-
              Name must be unique within a namespace. Is required when creating resources, although
              some resources may allow a client to request the generation of an appropriate name
              automatically. Name is primarily intended for creation idempotence and configuration
              definition.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/identifiers#names
              +optional
            type: string
          namespace:
            description: |-
              Namespace defines the space within which each name must be unique. An empty namespace is
              equivalent to the "default" namespace, but "default" is the canonical representation.
              Not all objects are required to be scoped to a namespace - the value of this field for
              those objects will be empty.

              Must be a DNS_LABEL.
              Cannot be updated.
              More info: http://kubernetes.io/docs/user-guide/namespaces
              +optional
            type: string
          ownerReferences:
            description: |-
              List of objects depended by this object. If ALL objects in the list have
              been deleted, this object will be garbage collected. If this object is managed by a controller,
              then an entry in this list will point to this controller, with the controller field set to true.
              There cannot be more than one managing controller.
              +optional
              +patchMergeKey=uid
              +patchStrategy=merge
            items:
              $ref: '#/definitions/v1.OwnerReference'
            type: array
          resourceVersion:
            description: |-
              An opaque value that represents the internal version of this object that can
              be used by clients to determine when objects have changed. May be used for optimistic
              concurrency, change detection, and the watch operation on a resource or set of resources.
              Clients must treat these values as opaque and passed unmodified back to the server.
              They may only be valid for a particular resource or set of resources.

              Populated by the system.
              Read-only.
              Value must be treated as opaque by clients and .
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
              +optional
            type: string
          selfLink:
            description: |-
              SelfLink is a URL representing this object.
              Populated by the system.
              Read-only.

              DEPRECATED
              Kubernetes will stop propagating this field in 1.20 release and the field is planned
              to be removed in 1.21 release.
              +optional
            type: string
          uid:
            description: |-
              UID is the unique in time and space value for this object. It is typically generated by
              the server on successful creation of a resource and is not allowed to change on PUT
              operations.

              Populated by the system.
              Read-only.
              More info: http://kubernetes.io/docs/user-guide/identifiers#uids
              +optional
            type: string
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.UserSpec'
      status:
        $ref: '#/definitions/v1.UserStatus'
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
    type: object
  v1.UserSpec:
    properties:
      displayName:
        type: string
      email:
        type: string
      language:
        description: 'The preferred written or spoken language for the user: chinese/english'
        type: string
      loginType:
        description: Login method used, normal/openId/ldap
        type: string
      password:
        type: string
      phone:
        type: string
      state:
        type: string
    type: object
  v1.UserStatus:
    properties:
      lastLoginIP:
        type: string
      lastLoginTime:
        description: The user status, normal/forbidden
        type: string
    type: object
info:
  contact: {}
  description: This is KubeCube api documentation.
  title: Swagger KubeCube API
  version: "1.0"
paths:
  /api/v1/cube/authorization/bindings:
    delete:
      description: delete roleBinding and clusterRoleBinding
      parameters:
        - description: roleBinding name
          in: query
          name: name
          required: true
          type: string
        - description: roleBinding namespace
          in: query
          name: namespace
          required: true
          type: string
      responses:
        "200":
          description: success
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Delete roleBinding
      tags:
        - authorization
    post:
      description: create roleBinding and clusterRoleBinding
      parameters:
        - description: roleBinding data
          in: body
          name: roleBinding
          required: true
          schema:
            $ref: '#/definitions/v1.RoleBinding'
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Create roleBinding
      tags:
        - authorization
  /api/v1/cube/authorization/clusterroles:
    get:
      description: get clusterRoles by level
      parameters:
        - description: hnc level
          in: query
          name: level
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_authorization.result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get roleBinding
      tags:
        - authorization
  /api/v1/cube/authorization/identities:
    get:
      description: show a user identity of platform, tenant or project
      parameters:
        - description: user name
          in: query
          name: user
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show identity
      tags:
        - authorization
  /api/v1/cube/authorization/projects:
    get:
      description: get all visible project for user under tenant
      parameters:
        - description: user name
          in: query
          name: user
          required: true
          type: string
        - description: tenant name
          in: query
          name: tenant
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_authorization.result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get projects
      tags:
        - authorization
  /api/v1/cube/authorization/roles:
    get:
      description: get roles if namespace specified role and clusterRole contained,
        otherwise just return clusterRole
      parameters:
        - description: user name
          in: query
          name: user
          type: string
        - description: namespace name
          in: query
          name: namespace
          type: string
        - description: details true or false
          in: query
          name: details
          type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get roles
      tags:
        - authorization
  /api/v1/cube/authorization/tenants:
    get:
      description: get all visible tenant for user
      parameters:
        - description: user name
          in: query
          name: user
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_authorization.result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get visible tenant
      tags:
        - authorization
  /api/v1/cube/authorization/users:
    get:
      description: get all of roles and cluster roles bind to user, with non empty
        namespace will match both Role and ClusterRole, otherwise only clusterRole
      parameters:
        - description: role name
          in: query
          name: role
          type: string
        - description: namespace name
          in: query
          name: namespace
          type: string
        - description: details true or false
          in: query
          name: details
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_authorization.result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get users
      tags:
        - authorization
  /api/v1/cube/clusters/addCluster:
    post:
      description: add cluster to KubeCube
      parameters:
        - description: new cluster raw data
          in: body
          name: scriptData
          required: true
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_cluster.scriptData'
      responses:
        "200":
          description: base64 encode
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Add cluster
      tags:
        - cluster
  /api/v1/cube/clusters/info:
    get:
      description: get cluster info by cluster name, non cluster name means all clusters
        info
      parameters:
        - description: cluster info search by cluster
          in: query
          name: cluster
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_apiserver_cubeapi_cluster.result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Show cluster info
      tags:
        - cluster
  /api/v1/cube/clusters/namespaces:
    get:
      description: get cluster name where the namespace work in
      parameters:
        - description: clusters search by namespace
          in: query
          name: namespace
          type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Show all clusters bind to namespace
      tags:
        - cluster
  /api/v1/cube/clusters/resources:
    get:
      description: get allocate resource of cluster
      parameters:
        - description: allocate resource search by cluster
          in: query
          name: cluster
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get allocate resource of cluster
      tags:
        - cluster
  /api/v1/cube/clusters/subnamespaces:
    get:
      description: get sub namespaces by tenant
      parameters:
        - description: list sub namespaces by tenant
          in: query
          name: tenant
          type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: Get sub namespace
      tags:
        - cluster
  /api/v1/cube/healthz:
    get:
      produces:
        - application/json
      responses:
        "200":
          description: '{"msg": "hello"}'
          schema:
            type: string
      summary: health check
  /api/v1/cube/key:
    delete:
      description: delete ak & sk keys
      parameters:
      - description: access key
        in: query
        name: accessKey
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: delete key
      tags:
      - key
    get:
      description: query key by token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.KeyList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: list key
      tags:
      - key
  /api/v1/cube/key/create:
    get:
      description: create ak & sk keys
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: create key
      tags:
      - key
  /api/v1/cube/key/token:
    get:
      description: query key by ak&sk
      parameters:
      - description: access key
        in: query
        name: accessKey
        type: string
      - description: secret key
        in: query
        name: secretKey
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: get token by key
      tags:
      - key
  /api/v1/cube/login:
    post:
      consumes:
      - application/json
      description: user login by password or ldap
      parameters:
      - description: user login information
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/pkg_apiserver_cubeapi_user.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: login
      tags:
      - user
  /api/v1/cube/user:
    get:
      description: fuzzy query user by name or displayName
      parameters:
      - description: keyword for query
        in: query
        name: query
        type: string
      - description: page size
        in: query
        name: pageSize
        type: integer
      - description: page num
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.UserList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: list user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user manually
      parameters:
      - description: user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: create user
      tags:
      - user
  /api/v1/cube/user/:username:
    get:
      description: check username when update user password
      parameters:
      - description: user name
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.NameValid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: check username
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user information
      parameters:
      - description: user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.User'
      - description: user name
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: update user
      tags:
      - user
  /api/v1/cube/user/pwd:
    put:
      description: update user password
      parameters:
      - description: user old and new password
        in: body
        name: resetPwd
        required: true
        schema:
          $ref: '#/definitions/github.com_kubecube-io_kubecube_pkg_apiserver_cubeapi_user.ResetPwd'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: update password
      tags:
      - user
  /api/v1/cube/user/template:
    get:
      description: get user information import template
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get import template
      tags:
      - user
  /api/v1/cube/user/users:
    post:
      consumes:
      - multipart/form-data
      description: import and create users from CSV file in batches
      parameters:
      - description: file
        in: formData
        name: userInfoFile
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errcode.ErrorInfo'
      summary: import user
      tags:
      - user
swagger: "2.0"
